---
interface Props {
  level?: number;
  text: string;
  secondaryText?: string;
  preserveCase?: boolean;
  [key: string]: any;
}

const { level = 1, text, secondaryText, preserveCase = false, ...attrs } = Astro.props;
const HeadingTag = `h${level}`;
const headingClass = preserveCase ? 'heading__text preserve-case' : 'heading__text';
---

<div class="heading">
  {secondaryText && <small class="heading__secondary">{secondaryText}</small>}
  <component is={HeadingTag} class={headingClass} {...attrs}>
    {text}
  </component>
</div>

<style>
    .heading {
        text-align: center;
        margin-bottom: var(--spacing-large);
    }

    .heading__text {
        font-size: var(--font-size-huge);
        font-weight: 800;
        margin: 0;
        line-height: 1.25;
        background: linear-gradient(180deg,
            var(--color-primary-light) 0%,
            var(--color-primary) 60%,
            var(--color-primary-dark) 100%);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        letter-spacing: -0.02em;
        display: inline-block;
        padding: 0 var(--spacing-small);
        word-break: break-word;
        hyphens: auto;
        filter: drop-shadow(0 2px 0px rgba(0, 0, 0, 0.5))
               drop-shadow(0 0.3rem 0.3rem rgba(0, 0, 0, 0.5));
    }

    .heading__secondary {
        display: block;
        font-size: var(--font-size-xs, 0.75rem);
        color: var(--color-text-light);
        font-weight: normal;
        margin-bottom: var(--spacing-small);
    }
</style>
